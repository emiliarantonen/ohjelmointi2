package harkkatyo.test;
// Generated by ComTest BEGIN
import java.util.*;
import java.io.*;
import static org.junit.Assert.*;
import org.junit.*;
import harkkatyo.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2022.03.29 13:32:22 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class RekisteriTest {



  // Generated by ComTest BEGIN
  /** 
   * testLisaa25 
   * @throws SailoException when error
   */
  @Test
  public void testLisaa25() throws SailoException {    // Rekisteri: 25
    Rekisteri rekisteri = new Rekisteri(); 
    Joukkue lumo1 = new Joukkue(), lumo2 = new Joukkue(); 
    rekisteri.lisaa(lumo1); 
    rekisteri.lisaa(lumo2); 
    rekisteri.lisaa(lumo1); 
    Collection<Joukkue> loytyneet = rekisteri.etsi("",-1); 
    Iterator<Joukkue> it = loytyneet.iterator(); 
    assertEquals("From: Rekisteri line: 34", lumo1, it.next()); 
    assertEquals("From: Rekisteri line: 35", lumo2, it.next()); 
    assertEquals("From: Rekisteri line: 36", lumo1, it.next()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testAnnaKilpailut82 
   * @throws SailoException when error
   */
  @Test
  public void testAnnaKilpailut82() throws SailoException {    // Rekisteri: 82
    Rekisteri rekisteri = new Rekisteri(); 
    Joukkue lumo1 = new Joukkue(), lumo2 = new Joukkue(), lumo3 = new Joukkue(); 
    lumo1.rekisteroi(); lumo2.rekisteroi(); lumo3.rekisteroi(); 
    int id1 = lumo1.getIdNro(); 
    int id2 = lumo2.getIdNro(); 
    Kilpailu SM1= new Kilpailu(id1); rekisteri.lisaa(SM1); 
    Kilpailu SM2 = new Kilpailu(id1); rekisteri.lisaa(SM2); 
    Kilpailu SM3 = new Kilpailu(id2); rekisteri.lisaa(SM3); 
    Kilpailu SM4 = new Kilpailu(id2); rekisteri.lisaa(SM4); 
    Kilpailu SM5 = new Kilpailu(id2); rekisteri.lisaa(SM5); 
    List<Kilpailu> loytyneet; 
    loytyneet = rekisteri.annaKilpailut(lumo3); 
    assertEquals("From: Rekisteri line: 99", 0, loytyneet.size()); 
    loytyneet = rekisteri.annaKilpailut(lumo1); 
    assertEquals("From: Rekisteri line: 101", 2, loytyneet.size()); 
    assertEquals("From: Rekisteri line: 102", true, loytyneet.get(0) == SM1); 
    assertEquals("From: Rekisteri line: 103", true, loytyneet.get(1) == SM2); 
    loytyneet = rekisteri.annaKilpailut(lumo2); 
    assertEquals("From: Rekisteri line: 105", 3, loytyneet.size()); 
    assertEquals("From: Rekisteri line: 106", true, loytyneet.get(0) == SM3); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta120 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta120() throws SailoException {    // Rekisteri: 120
    Rekisteri rekisteri = new Rekisteri(); 
    Joukkue lumo = new Joukkue(); lumo.vastaaLumo(); lumo.rekisteroi(); 
    Joukkue lumo1 = new Joukkue(); lumo1.vastaaLumo(); lumo1.rekisteroi(); 
    Kilpailu SM1 = new Kilpailu(); SM1.vastaaSMKisat(lumo1.getIdNro()); 
    Kilpailu SM2 = new Kilpailu(); SM2.vastaaSMKisat(lumo.getIdNro()); 
    String hakemisto = "Lumo"; 
    File dir = new File(hakemisto); 
    File ftied  = new File(hakemisto+"/joukkueet.dat"); 
    File fhtied = new File(hakemisto+"/kilailut.dat"); 
    dir.mkdir(); 
    ftied.delete(); 
    fhtied.delete(); 
    try {
    rekisteri.lueTiedostosta(hakemisto); 
    fail("Rekisteri: 139 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    rekisteri.lisaa(lumo); 
    rekisteri.lisaa(lumo1); 
    rekisteri.lisaa(SM1); 
    rekisteri.lisaa(SM2); 
    rekisteri.tallenna(); 
  } // Generated by ComTest END
}